
package dynamicprograming;
import java.util.*;
public class DYNAMICPROGRAMING {
    public static int solution(String s1, String s2){
        int dp[][] = new int[s1.length()+1][s2.length()+1];
        
        for(int i=0;i<dp.length;i++){
            for(int j=0;j<dp[0].length;j++){
                if(i==0){
                    dp[i][j] = j;
                }
                else if(j==0){
                    dp[i][j]=i;
                }
                else{
                    if(s1.charAt(i-1)==s2.charAt(j-1)){
                        dp[i][j] = dp[i-1][j-1];        // if character are same fetch the character form diagonal
                    }
                    else{
                        
                        int f1= dp[i-1][j] +1; // delete operation result from cell above the current cell
                        int f2 = dp[i][j-1] +1; // insert operation result from cell on the left of current cell
                        int f3 = dp[i-1][j-1] +1; // replace operation result from cell at the diagonal of current cell
                        
                        dp[i][j] = Math.min(f1, Math.min(f2,f3));
                        
                    }
                }
            }
        }
        return dp[dp.length-1][dp[0].length-1];
    }
    
public static void main(String[]args){
    Scanner sc  = new Scanner(System.in);
    String str1 = sc.nextLine();
    String str2 = sc.nextLine();
    
    System.out.println(solution(str1,str2));
    }
    
}
